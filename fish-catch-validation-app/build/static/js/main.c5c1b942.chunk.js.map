{"version":3,"sources":["components/login/index.jsx","util/api-vars.js","components/catch-report/index.js","components/catch-report-list/index.js","components/catch-report-form/index.js","components/catch/index.js","components/catch-table/index.js","components/catch-list/index.js","components/home/index.js","App.js","serviceWorker.js","index.js"],"names":["Login","useState","username","password","user","setUser","handleOnchange","e","target","name","value","newUserValue","Form","className","Group","controlId","Label","Control","type","placeholder","onChange","to","Button","variant","API_ENDPOINT","window","location","host","CatchReport","props","button","isVerified","disabled","onClick","fetch","referenceNumber","then","result","json","message","console","log","preventDefault","onVerify","id","vesselName","boatCaptain","style","textAlign","CatchReportList","catchReports","records","Table","striped","bordered","hover","colSpan","map","record","key","CatchReportForm","setCatchReports","useEffect","Catch","catchData","catchId","species","weight","catchDate","CatchTable","catches","CatchList","match","params","catchInformation","setCatchInformation","setCatches","Home","Navbar","bg","Brand","href","Nav","Link","inline","FormControl","path","exact","component","App","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0hBAKA,IAoCeA,EApCH,WAAO,IAAD,EAGUC,mBAAS,CAAEC,SAAU,YAAaC,SAAU,WAHtD,mBAGPC,EAHO,KAGDC,EAHC,KAKVC,EAAiB,SAAAC,GAAM,IAAD,EACEA,EAAEC,OAAlBC,EADc,EACdA,KAAMC,EADQ,EACRA,MACRC,E,yVAAY,IAAQP,EAAR,eAAeK,EAAOC,IACxCL,EAAQM,IAQZ,OACI,kBAACC,EAAA,EAAD,CAAMC,UAAU,cACZ,kBAACD,EAAA,EAAKE,MAAN,CAAYC,UAAU,kBAClB,kBAACH,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,YAAY,iBAAiBV,KAAK,WAAWC,MAAON,EAAKF,SAAUkB,SAAU,SAAAb,GAAC,OAAID,EAAeC,OAG/H,kBAACK,EAAA,EAAKE,MAAN,CAAYC,UAAU,qBAClB,kBAACH,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,YAAY,WAAWV,KAAK,WAAWC,MAAON,EAAKD,SAAUiB,SAAU,SAAAb,GAAC,OAAID,EAAeC,OAE7H,kBAAC,IAAD,CAAMc,GAAG,SACL,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUL,KAAK,UAA/B,a,gCCjCVM,EAAY,kBAAcC,OAAOC,SAASC,MCqCjCC,EA/BG,SAACC,GAEf,IAOIC,EAAUD,EAAMnB,MAAMqB,WAAc,kBAACT,EAAA,EAAD,CAAQC,QAAQ,UAAUS,UAAU,GAApC,YAA8D,kBAACV,EAAA,EAAD,CAAQC,QAAQ,SAASU,QAAS,SAAA1B,GAAC,OAP1H,SAACA,GACZ2B,MAAM,GAAD,OAAIV,EAAJ,gDAAwDK,EAAMnB,MAAMyB,kBACpEC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAG,GAAO,OAAIC,QAAQC,IAAI,kBAAmBF,MACpDhC,EAAEmC,iBAGuIC,CAASpC,KAAhD,UAEtG,OACI,4BACI,4BAAKsB,EAAMnB,MAAMkC,IACjB,4BAAKf,EAAMnB,MAAMyB,iBACjB,4BAAKN,EAAMnB,MAAMmC,YACjB,4BAAKhB,EAAMnB,MAAMoC,aACjB,wBAAIC,MAAO,CAAEC,UAAW,WACpB,kBAAC,IAAD,CAAM3B,GAAE,2BAAsBQ,EAAMnB,MAAMyB,kBACtC,kBAACb,EAAA,EAAD,CAAQC,QAAQ,QAAhB,gBAGR,wBAAIwB,MAAO,CAAEC,UAAW,WAEhBlB,KCJLmB,MAtBf,SAAyBpB,GAErB,IAAMqB,EAAerB,EAAMnB,MAAMyC,QAEjC,OACI,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,+BACI,4BACI,iCACA,gDACA,2CACA,4CACA,wBAAIR,MAAO,CAAEC,UAAW,UAAYQ,QAAS,GAA7C,YAGR,+BACKN,EAAaO,KAAI,SAAAC,GAAM,OAAI,kBAAC,EAAD,CAAaC,IAAKD,EAAOd,GAAIlC,MAAOgD,U,8NCfhF,IAeeE,EAfO,WAAO,IAAD,EAEgB3D,mBAAS,CAAEkD,QAAS,KAFpC,mBAEjBD,EAFiB,KAEHW,EAFG,KAUxB,OANAC,qBAAU,WACN5B,MAAM,GAAD,OAAIV,EAAJ,4BACAY,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAe,GAAO,OAAIU,E,yVAAgB,IAAKX,EAAN,CAAoBC,mBAIxD,kBAAC,EAAD,CAAiBzC,MAAOwC,KCAjBa,EAdH,SAAClC,GAET,IAAMmC,EAAYnC,EAAMnB,MAExB,OACI,4BACI,4BAAKsD,EAAUC,SACf,4BAAKD,EAAUE,SACf,4BAAKF,EAAUG,QACf,4BAAKH,EAAUI,aCmBZC,EAxBE,SAACxC,GAEd,IAAMyC,EAAUzC,EAAMnB,MAAMyC,QAE5B,OACI,6BACI,kBAACC,EAAA,EAAD,KACI,+BACI,wCACA,uCACA,sCACA,2CAEJ,+BACKkB,EAAQb,KAAI,SAAAO,GAAS,OAAI,kBAAC,EAAD,CAAOL,IAAKK,EAAUpB,GAAIlC,MAAOsD,SAGnE,6BACI,kBAAC,IAAD,CAAM3C,GAAG,SAAQ,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAhB,e,yjBClBjC,IAiCegD,EAjCC,SAAC1C,GACbW,QAAQC,IAAI,UAAWZ,GADA,IAEfM,EAAoBN,EAAM2C,MAAMC,OAAhCtC,gBAFe,EAGyBlC,mBAAS,CAAEkC,gBAAiB,GAAIU,WAAY,GAAIC,YAAa,KAHtF,mBAGhB4B,EAHgB,KAGEC,EAHF,OAIO1E,mBAAS,CAAEkD,QAAS,KAJ3B,mBAIhBmB,EAJgB,KAIPM,EAJO,KAgBvB,OAVAd,qBAAU,WACN5B,MAAM,GAAD,OAAIV,EAAJ,0CAAkDW,IAClDC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAe,GACF,IAAIuB,EAAmBvB,EAAQ,GAC/BwB,EAAoB,KAAKD,EAAN,CAAwBA,sBAC3CE,EAAW,KAAKN,EAAN,CAAenB,mBAKjC,6BACI,6BACI,yDAA+BuB,EAAiBvC,iBAChD,4CAAkBuC,EAAiB7B,YACnC,+CAAqB6B,EAAiB5B,cAE1C,kBAACM,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,gCACA,+BACI,kBAAC,EAAD,CAAY7C,MAAO4D,QCHxBO,EAtBJ,WAEP,OACI,kBAAC,IAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,UAAUxD,QAAQ,QACzB,kBAACuD,EAAA,EAAOE,MAAR,CAAcC,KAAK,SAAnB,eACA,kBAACC,EAAA,EAAD,CAAKrE,UAAU,WACX,kBAACqE,EAAA,EAAIC,KAAL,CAAUF,KAAK,SAAf,SAEJ,kBAACrE,EAAA,EAAD,CAAMwE,QAAM,GACR,kBAACC,EAAA,EAAD,CAAanE,KAAK,OAAOC,YAAY,SAASN,UAAU,YACxD,kBAACS,EAAA,EAAD,CAAQC,QAAQ,iBAAhB,YAGR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO+D,KAAK,QAAQC,OAAK,EAACC,UAAW5B,IACrC,kBAAC,IAAD,CAAO0B,KAAK,oCAAoCE,UAAWjB,OCN5DkB,MAXf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOH,KAAK,IAAIC,OAAK,EAACC,UAAWxF,IACjC,kBAAC,IAAD,CAAOsF,KAAK,QAAQE,UAAWX,OCCnBa,QACW,cAA7BjE,OAAOC,SAASiE,UAEe,UAA7BlE,OAAOC,SAASiE,UAEhBlE,OAAOC,SAASiE,SAASnB,MACvB,2D,MCVNoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9D,MAAK,SAAA+D,GACjCA,EAAaC,kB","file":"static/js/main.c5c1b942.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport './login.css';\n\nlet Login = () => {\n\n\n    const [user, setUser] = useState({ username: 'certifier', password: 'abc123' });\n\n    let handleOnchange = e => {\n        const { name, value } = e.target;\n        const newUserValue = { ...user, [name]: value };\n        setUser(newUserValue);\n    }\n\n    // let handleLogin = (event) => {\n    //     alert(JSON.stringify(user));\n    //     event.preventDefault();\n    // }\n\n    return (\n        <Form className=\"login-form\">\n            <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Enter Username\" name=\"username\" value={user.username} onChange={e => handleOnchange(e)} />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={user.password} onChange={e => handleOnchange(e)} />\n            </Form.Group>\n            <Link to='/home'>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n            </Button>\n            </Link>\n        </Form>\n    );\n}\n\nexport default Login;","const API_ENDPOINT = `https://${window.location.host}`;\n\n\nexport { API_ENDPOINT };","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nimport { API_ENDPOINT } from '../../util/api-vars';\n\nlet CatchReport = (props) => {\n\n    let onVerify = (e) => {\n        fetch(`${API_ENDPOINT}/verify_catch_report?referenceNumber=${props.value.referenceNumber}`)\n            .then(result => result.json())\n            .then(message => console.log('success message', message));\n        e.preventDefault();\n    }\n\n    let button = (props.value.isVerified) ? <Button variant=\"success\" disabled={true}>VERIFIED</Button> : <Button variant=\"danger\" onClick={e => onVerify(e)}>VERIFY</Button>;\n\n    return (\n        <tr>\n            <td>{props.value.id}</td>\n            <td>{props.value.referenceNumber}</td>\n            <td>{props.value.vesselName}</td>\n            <td>{props.value.boatCaptain}</td>\n            <td style={{ textAlign: \"center\" }}>\n                <Link to={`/home/catch_list/${props.value.referenceNumber}`}>\n                    <Button variant=\"info\">VIEW CATCH</Button>\n                </Link>\n            </td>\n            <td style={{ textAlign: \"center\" }}>\n                {\n                    button\n                }\n            </td>\n        </tr>\n    );\n}\n\nexport default CatchReport;","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport CatchReport from '../catch-report';\n\nfunction CatchReportList(props) {\n\n    const catchReports = props.value.records;\n\n    return (\n        <Table striped bordered hover>\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Reference Number</th>\n                    <th>Vessel Name</th>\n                    <th>Boat Captain</th>\n                    <th style={{ textAlign: \"center\" }} colSpan={2}>ACTION</th>\n                </tr>\n            </thead>\n            <tbody>\n                {catchReports.map(record => <CatchReport key={record.id} value={record} />)}\n            </tbody>\n        </Table>\n    );\n};\n\nexport default CatchReportList;","import React, { useState, useEffect } from 'react';\nimport CatchReportList from '../catch-report-list';\n\nimport { API_ENDPOINT } from '../../util/api-vars';\n\nlet CatchReportForm = () => {\n\n    const [catchReports, setCatchReports] = useState({ records: [] });\n\n    useEffect(() => {\n        fetch(`${API_ENDPOINT}/catch_reports/distinct`)\n            .then(result => result.json())\n            .then(records => setCatchReports({ ...catchReports, records }));\n    });\n\n    return (\n        <CatchReportList value={catchReports} />\n    );\n}\n\nexport default CatchReportForm;","import React from 'react';\n\nlet Catch = (props) => {\n\n    const catchData = props.value;\n\n    return (\n        <tr>\n            <td>{catchData.catchId}</td>\n            <td>{catchData.species}</td>\n            <td>{catchData.weight}</td>\n            <td>{catchData.catchDate}</td>\n        </tr>\n    );\n}\n\nexport default Catch;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table, Button } from 'react-bootstrap'\n\nimport Catch from '../catch';\n\nlet CatchTable = (props) => {\n\n    const catches = props.value.records;\n\n    return (\n        <div>\n            <Table>\n                <thead>\n                    <td>Catch ID</td>\n                    <td>Species</td>\n                    <td>Weight</td>\n                    <td>Catch Date</td>\n                </thead>\n                <tbody>\n                    {catches.map(catchData => <Catch key={catchData.id} value={catchData} />)}\n                </tbody>\n            </Table>\n            <div>\n                <Link to=\"/home\"><Button variant=\"danger\">Go Back</Button></Link>\n            </div>\n        </div>\n    );\n}\n\nexport default CatchTable;","import React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { API_ENDPOINT } from '../../util/api-vars';\n\nimport CatchTable from '../catch-table';\n\nlet CatchList = (props) => {\n    console.log('asdfdas', props);\n    const { referenceNumber } = props.match.params;\n    const [catchInformation, setCatchInformation] = useState({ referenceNumber: '', vesselName: '', boatCaptain: '' });\n    const [catches, setCatches] = useState({ records: [] });\n\n    useEffect(() => {\n        fetch(`${API_ENDPOINT}/catch_reports?referenceNumber=${referenceNumber}`)\n            .then(result => result.json())\n            .then(records => {\n                let catchInformation = records[0];\n                setCatchInformation({ ...catchInformation, catchInformation });\n                setCatches({ ...catches, records });\n            });\n    });\n\n    return (\n        <div>\n            <div>\n                <h2>Catch Report Reference #: {catchInformation.referenceNumber}</h2>\n                <h2>Vessel Name: {catchInformation.vesselName}</h2>\n                <h2>Captain's Name: {catchInformation.boatCaptain}</h2>\n            </div>\n            <Table striped bordered hover>\n                <thead></thead>\n                <tbody>\n                    <CatchTable value={catches} />\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nexport default CatchList;","import React from 'react';\nimport { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport CatchReportForm from '../catch-report-form';\nimport CatchList from '../catch-list';\n\nlet Home = () => {\n\n    return (\n        <Router>\n            <Navbar bg=\"primary\" variant=\"dark\">\n                <Navbar.Brand href=\"/home\">FishTegrate</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"/home\">Home</Nav.Link>\n                </Nav>\n                <Form inline>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                    <Button variant=\"outline-light\">Search</Button>\n                </Form>\n            </Navbar>\n            <Switch>\n                <Route path=\"/home\" exact component={CatchReportForm} />\n                <Route path=\"/home/catch_list/:referenceNumber\" component={CatchList} />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Login from './components/login';\nimport Home from './components/home';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Login} />\n        <Route path=\"/home\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}